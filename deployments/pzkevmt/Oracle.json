{
  "address": "0x86D328ea5bE920F5d8CFfb23900f493f96F6b5cE",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidUsernameLength",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "lengthThree",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFour",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFiveOrMore",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Oracle.YearlyUsernameFees",
          "name": "oldFees",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "lengthThree",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFour",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFiveOrMore",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Oracle.YearlyUsernameFees",
          "name": "newFees",
          "type": "tuple"
        }
      ],
      "name": "FeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "lengthThree",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFour",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lengthFiveOrMore",
              "type": "uint64"
            }
          ],
          "internalType": "struct Oracle.YearlyUsernameFees",
          "name": "newFees",
          "type": "tuple"
        }
      ],
      "name": "changeFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "usernameLength",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "durationInSeconds",
          "type": "uint128"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yearlyUsernameFees",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "lengthThree",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "lengthFour",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "lengthFiveOrMore",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8b92a8f1302c3c9a7700410baf6147b6e746902f46fac46867ad0fba6858ae21",
  "receipt": {
    "to": null,
    "from": "0xf0d5D3FcBFc0009121A630EC8AB67e012117f40c",
    "contractAddress": "0x86D328ea5bE920F5d8CFfb23900f493f96F6b5cE",
    "transactionIndex": 0,
    "gasUsed": "544514",
    "logsBloom": "0x
    "blockHash": "0xc0ff3696d7bfdbafbdd27f6c0f0fb4af239075169e2d6a738f7959d50eee644e",
    "transactionHash": "0x8b92a8f1302c3c9a7700410baf6147b6e746902f46fac46867ad0fba6858ae21",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 685533,
        "transactionHash": "0x8b92a8f1302c3c9a7700410baf6147b6e746902f46fac46867ad0fba6858ae21",
        "address": "0x86D328ea5bE920F5d8CFfb23900f493f96F6b5cE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f0d5d3fcbfc0009121a630ec8ab67e012117f40c"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc0ff3696d7bfdbafbdd27f6c0f0fb4af239075169e2d6a738f7959d50eee644e"
      }
    ],
    "blockNumber": 685533,
    "cumulativeGasUsed": "544514",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "71f9ee6bb38df22d51153f1693255bd4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidUsernameLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"lengthThree\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFour\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFiveOrMore\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Oracle.YearlyUsernameFees\",\"name\":\"oldFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"lengthThree\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFour\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFiveOrMore\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Oracle.YearlyUsernameFees\",\"name\":\"newFees\",\"type\":\"tuple\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"lengthThree\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFour\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFiveOrMore\",\"type\":\"uint64\"}],\"internalType\":\"struct Oracle.YearlyUsernameFees\",\"name\":\"newFees\",\"type\":\"tuple\"}],\"name\":\"changeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"usernameLength\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"durationInSeconds\",\"type\":\"uint128\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearlyUsernameFees\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"lengthThree\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFour\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lengthFiveOrMore\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle contract returns a price set by the oracle contract owner. The owner can change the fee structure. The price is determined by the username length and is multiplied by the duration.\",\"kind\":\"dev\",\"methods\":{\"changeFees((uint64,uint64,uint64))\":{\"details\":\"Emits a FeesUpdated event with the old and new fee structures.Only callable by the contract owner.\",\"params\":{\"newFees\":\"The new fee structure.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"price(uint8,uint128)\":{\"details\":\"Reverts if the username length is less than 3.\",\"params\":{\"durationInSeconds\":\"The desired duration in seconds.\",\"usernameLength\":\"The length of the username.\"},\"returns\":{\"_0\":\"The price in wei.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeFees((uint64,uint64,uint64))\":{\"notice\":\"Change the fee structure for username pricing.\"},\"price(uint8,uint128)\":{\"notice\":\"Calculate the price for a username based on its length and the desired duration.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Oracle.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Oracle\\n * @dev Oracle contract returns a price set by the oracle contract owner.\\n * The owner can change the fee structure. The price is determined by the username length and is multiplied by the duration.\\n */\\ncontract Oracle is Ownable {\\n    uint32 constant SECONDS_PER_YEAR = 31_536_000;\\n    uint64 constant FACTOR = 10 ** 18;\\n\\n    struct YearlyUsernameFees {\\n        uint64 lengthThree;\\n        uint64 lengthFour;\\n        uint64 lengthFiveOrMore;\\n    }\\n\\n    YearlyUsernameFees public yearlyUsernameFees;\\n\\n    constructor() {\\n        yearlyUsernameFees = YearlyUsernameFees({\\n            lengthThree: 0.32 ether,\\n            lengthFour: 0.8 ether,\\n            lengthFiveOrMore: 0.0025 ether\\n        });\\n    }\\n\\n    event FeesUpdated(YearlyUsernameFees oldFees, YearlyUsernameFees newFees);\\n\\n    error InvalidUsernameLength();\\n\\n    /**\\n     * @notice Calculate the price for a username based on its length and the desired duration.\\n     * @param usernameLength The length of the username.\\n     * @param durationInSeconds The desired duration in seconds.\\n     * @return The price in wei.\\n     * @dev Reverts if the username length is less than 3.\\n     */\\n    function price(\\n        uint8 usernameLength,\\n        uint128 durationInSeconds\\n    ) external view returns (uint) {\\n        if (usernameLength < 3) {\\n            revert InvalidUsernameLength();\\n        }\\n\\n        uint fee;\\n        if (usernameLength == 3) {\\n            fee = yearlyUsernameFees.lengthThree;\\n        } else if (usernameLength == 4) {\\n            fee = yearlyUsernameFees.lengthFour;\\n        } else {\\n            fee = yearlyUsernameFees.lengthFiveOrMore;\\n        }\\n\\n        uint256 durationInYears = (durationInSeconds * FACTOR) /\\n            SECONDS_PER_YEAR;\\n\\n        return (fee * durationInYears) / FACTOR;\\n    }\\n\\n    /**\\n     * @notice Change the fee structure for username pricing.\\n     * @param newFees The new fee structure.\\n     * @dev Emits a FeesUpdated event with the old and new fee structures.\\n     * @dev Only callable by the contract owner.\\n     */\\n    function changeFees(\\n        YearlyUsernameFees calldata newFees\\n    ) external onlyOwner {\\n        YearlyUsernameFees memory oldFees = yearlyUsernameFees;\\n        yearlyUsernameFees = newFees;\\n        emit FeesUpdated(oldFees, newFees);\\n    }\\n}\\n\",\"keccak256\":\"0xafae8593a256b47743077f91579e80236cc0bc2fe8fe659fdf5ab79f3e1fb815\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a33610076565b60408051606081018252670470de4df82000008152670b1a2bc2ec50000060208201526608e1bc9bf04000910152600180546001600160c01b0319167608e1bc9bf040000b1a2bc2ec5000000470de4df82000001790556100c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610813806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a0083ebd11610050578063a0083ebd14610115578063a36a821c14610128578063f2fde38b1461014957600080fd5b80635f9d23e014610077578063715018a6146100e35780638da5cb5b146100ed575b600080fd5b6001546100b39067ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000009091041683565b6040805167ffffffffffffffff948516815292841660208401529216918101919091526060015b60405180910390f35b6100eb61015c565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100da565b6100eb6101233660046104cf565b610170565b61013b6101363660046104e7565b610211565b6040519081526020016100da565b6100eb61015736600461053b565b61031d565b6101646103d9565b61016e600061045a565b565b6101786103d9565b604080516060810182526001805467ffffffffffffffff80821684526801000000000000000082048116602085015270010000000000000000000000000000000090910416928201929092529082906101d1828261058e565b9050507f78e081f102ed205311ff2a8973b1ae23597b24774ae7d43f2136092bf636f462818360405161020592919061067c565b60405180910390a15050565b600060038360ff161015610251576040517f329b731700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360ff16600303610271575060015467ffffffffffffffff166102be565b8360ff1660040361029b575060015468010000000000000000900467ffffffffffffffff166102be565b50600154700100000000000000000000000000000000900467ffffffffffffffff165b60006301e133806102d7670de0b6b3a764000086610720565b6102e19190610783565b6fffffffffffffffffffffffffffffffff169050670de0b6b3a764000061030882846107b2565b61031291906107c9565b925050505b92915050565b6103256103d9565b73ffffffffffffffffffffffffffffffffffffffff81166103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103d68161045a565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461016e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c4565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000606082840312156104e157600080fd5b50919050565b600080604083850312156104fa57600080fd5b823560ff8116811461050b57600080fd5b915060208301356fffffffffffffffffffffffffffffffff8116811461053057600080fd5b809150509250929050565b60006020828403121561054d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461057157600080fd5b9392505050565b67ffffffffffffffff811681146103d657600080fd5b813561059981610578565b67ffffffffffffffff811690508154817fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000821617835560208401356105dd81610578565b6fffffffffffffffff00000000000000008160401b16905080837fffffffffffffffffffffffffffffffff00000000000000000000000000000000841617178455604085013561062c81610578565b77ffffffffffffffff000000000000000000000000000000008160801b16847fffffffffffffffff0000000000000000000000000000000000000000000000008516178317178555505050505050565b600060c08201905067ffffffffffffffff80855116835280602086015116602084015280604086015116604084015283356106b681610578565b8116606084015260208401356106cb81610578565b8116608084015260408401356106e081610578565b81811660a085015250509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6fffffffffffffffffffffffffffffffff81811683821602808216919082811461074c5761074c6106f1565b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006fffffffffffffffffffffffffffffffff808416806107a6576107a6610754565b92169190910492915050565b8082028115828204841417610317576103176106f1565b6000826107d8576107d8610754565b50049056fea26469706673582212207bce1539a9c6ddff4e0dd48490acb0aab2845c12eb8832104cbc757d26a5c37764736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063a0083ebd11610050578063a0083ebd14610115578063a36a821c14610128578063f2fde38b1461014957600080fd5b80635f9d23e014610077578063715018a6146100e35780638da5cb5b146100ed575b600080fd5b6001546100b39067ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000009091041683565b6040805167ffffffffffffffff948516815292841660208401529216918101919091526060015b60405180910390f35b6100eb61015c565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100da565b6100eb6101233660046104cf565b610170565b61013b6101363660046104e7565b610211565b6040519081526020016100da565b6100eb61015736600461053b565b61031d565b6101646103d9565b61016e600061045a565b565b6101786103d9565b604080516060810182526001805467ffffffffffffffff80821684526801000000000000000082048116602085015270010000000000000000000000000000000090910416928201929092529082906101d1828261058e565b9050507f78e081f102ed205311ff2a8973b1ae23597b24774ae7d43f2136092bf636f462818360405161020592919061067c565b60405180910390a15050565b600060038360ff161015610251576040517f329b731700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360ff16600303610271575060015467ffffffffffffffff166102be565b8360ff1660040361029b575060015468010000000000000000900467ffffffffffffffff166102be565b50600154700100000000000000000000000000000000900467ffffffffffffffff165b60006301e133806102d7670de0b6b3a764000086610720565b6102e19190610783565b6fffffffffffffffffffffffffffffffff169050670de0b6b3a764000061030882846107b2565b61031291906107c9565b925050505b92915050565b6103256103d9565b73ffffffffffffffffffffffffffffffffffffffff81166103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103d68161045a565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461016e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c4565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000606082840312156104e157600080fd5b50919050565b600080604083850312156104fa57600080fd5b823560ff8116811461050b57600080fd5b915060208301356fffffffffffffffffffffffffffffffff8116811461053057600080fd5b809150509250929050565b60006020828403121561054d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461057157600080fd5b9392505050565b67ffffffffffffffff811681146103d657600080fd5b813561059981610578565b67ffffffffffffffff811690508154817fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000821617835560208401356105dd81610578565b6fffffffffffffffff00000000000000008160401b16905080837fffffffffffffffffffffffffffffffff00000000000000000000000000000000841617178455604085013561062c81610578565b77ffffffffffffffff000000000000000000000000000000008160801b16847fffffffffffffffff0000000000000000000000000000000000000000000000008516178317178555505050505050565b600060c08201905067ffffffffffffffff80855116835280602086015116602084015280604086015116604084015283356106b681610578565b8116606084015260208401356106cb81610578565b8116608084015260408401356106e081610578565b81811660a085015250509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6fffffffffffffffffffffffffffffffff81811683821602808216919082811461074c5761074c6106f1565b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006fffffffffffffffffffffffffffffffff808416806107a6576107a6610754565b92169190910492915050565b8082028115828204841417610317576103176106f1565b6000826107d8576107d8610754565b50049056fea26469706673582212207bce1539a9c6ddff4e0dd48490acb0aab2845c12eb8832104cbc757d26a5c37764736f6c63430008130033",
  "devdoc": {
    "details": "Oracle contract returns a price set by the oracle contract owner. The owner can change the fee structure. The price is determined by the username length and is multiplied by the duration.",
    "kind": "dev",
    "methods": {
      "changeFees((uint64,uint64,uint64))": {
        "details": "Emits a FeesUpdated event with the old and new fee structures.Only callable by the contract owner.",
        "params": {
          "newFees": "The new fee structure."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "price(uint8,uint128)": {
        "details": "Reverts if the username length is less than 3.",
        "params": {
          "durationInSeconds": "The desired duration in seconds.",
          "usernameLength": "The length of the username."
        },
        "returns": {
          "_0": "The price in wei."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Oracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeFees((uint64,uint64,uint64))": {
        "notice": "Change the fee structure for username pricing."
      },
      "price(uint8,uint128)": {
        "notice": "Calculate the price for a username based on its length and the desired duration."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2653,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "yearlyUsernameFees",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(YearlyUsernameFees)2650_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_struct(YearlyUsernameFees)2650_storage": {
        "encoding": "inplace",
        "label": "struct Oracle.YearlyUsernameFees",
        "members": [
          {
            "astId": 2645,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "lengthThree",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 2647,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "lengthFour",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 2649,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "lengthFiveOrMore",
            "offset": 16,
            "slot": "0",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}